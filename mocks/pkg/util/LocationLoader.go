// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks_util

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// LocationLoader is an autogenerated mock type for the LocationLoader type
type LocationLoader struct {
	mock.Mock
}

// Execute provides a mock function with given fields: name
func (_m *LocationLoader) Execute(name string) (*time.Location, error) {
	ret := _m.Called(name)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 *time.Location
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*time.Location, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) *time.Location); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*time.Location)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewLocationLoader creates a new instance of LocationLoader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLocationLoader(t interface {
	mock.TestingT
	Cleanup(func())
}) *LocationLoader {
	mock := &LocationLoader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
